// Copyright 2024 孔令飞 <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/ashwinyue/one-auth. The professional
// version of this repository is https://github.com/onexstack/onex.

// 菜单管理 API 定义

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.1
// source: apiserver/v1/menu.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Menu 表示菜单信息
type Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id 表示菜单主键ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// tenant_id 表示租户ID
	TenantId int64 `protobuf:"varint,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// parent_id 表示父菜单ID
	ParentId int64 `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// menu_code 表示菜单编码
	MenuCode string `protobuf:"bytes,4,opt,name=menu_code,json=menuCode,proto3" json:"menu_code,omitempty"`
	// title 表示菜单标题
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// route_path 表示前端路由路径
	RoutePath string `protobuf:"bytes,6,opt,name=route_path,json=routePath,proto3" json:"route_path,omitempty"`
	// api_path 表示API访问路径
	ApiPath string `protobuf:"bytes,7,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
	// http_methods 表示支持的HTTP方法
	HttpMethods string `protobuf:"bytes,8,opt,name=http_methods,json=httpMethods,proto3" json:"http_methods,omitempty"`
	// require_auth 表示是否需要认证
	RequireAuth bool `protobuf:"varint,9,opt,name=require_auth,json=requireAuth,proto3" json:"require_auth,omitempty"`
	// component 表示前端组件路径
	Component string `protobuf:"bytes,10,opt,name=component,proto3" json:"component,omitempty"`
	// icon 表示图标
	Icon string `protobuf:"bytes,11,opt,name=icon,proto3" json:"icon,omitempty"`
	// sort_order 表示排序
	SortOrder int32 `protobuf:"varint,12,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	// menu_type 表示菜单类型：1-菜单，2-按钮，3-接口
	MenuType int32 `protobuf:"varint,13,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`
	// visible 表示是否可见
	Visible bool `protobuf:"varint,14,opt,name=visible,proto3" json:"visible,omitempty"`
	// status 表示状态
	Status int32 `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	// children 表示子菜单
	Children []*Menu `protobuf:"bytes,16,rep,name=children,proto3" json:"children,omitempty"`
	// created_at 表示创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated_at 表示更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Menu) Reset() {
	*x = Menu{}
	mi := &file_apiserver_v1_menu_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_menu_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_menu_proto_rawDescGZIP(), []int{0}
}

func (x *Menu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Menu) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *Menu) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Menu) GetMenuCode() string {
	if x != nil {
		return x.MenuCode
	}
	return ""
}

func (x *Menu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Menu) GetRoutePath() string {
	if x != nil {
		return x.RoutePath
	}
	return ""
}

func (x *Menu) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *Menu) GetHttpMethods() string {
	if x != nil {
		return x.HttpMethods
	}
	return ""
}

func (x *Menu) GetRequireAuth() bool {
	if x != nil {
		return x.RequireAuth
	}
	return false
}

func (x *Menu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *Menu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Menu) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *Menu) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *Menu) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Menu) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Menu) GetChildren() []*Menu {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Menu) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Menu) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// GetUserMenusRequest 表示获取用户菜单请求
type GetUserMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tenant_id 表示租户ID
	// @gotags: form:"tenant_id"
	TenantId int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty" form:"tenant_id"`
}

func (x *GetUserMenusRequest) Reset() {
	*x = GetUserMenusRequest{}
	mi := &file_apiserver_v1_menu_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMenusRequest) ProtoMessage() {}

func (x *GetUserMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_menu_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMenusRequest.ProtoReflect.Descriptor instead.
func (*GetUserMenusRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_menu_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserMenusRequest) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// GetUserMenusResponse 表示获取用户菜单响应
type GetUserMenusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// menus 表示菜单列表
	Menus []*Menu `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *GetUserMenusResponse) Reset() {
	*x = GetUserMenusResponse{}
	mi := &file_apiserver_v1_menu_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserMenusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMenusResponse) ProtoMessage() {}

func (x *GetUserMenusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_menu_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMenusResponse.ProtoReflect.Descriptor instead.
func (*GetUserMenusResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_menu_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserMenusResponse) GetMenus() []*Menu {
	if x != nil {
		return x.Menus
	}
	return nil
}

// ListMenusRequest 表示获取菜单列表请求
type ListMenusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tenant_id 表示租户ID
	// @gotags: form:"tenant_id"
	TenantId int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty" form:"tenant_id"`
	// parent_id 表示父菜单ID，0表示获取顶级菜单
	// @gotags: form:"parent_id"
	ParentId int64 `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty" form:"parent_id"`
	// menu_type 表示菜单类型过滤
	// @gotags: form:"menu_type"
	MenuType int32 `protobuf:"varint,3,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty" form:"menu_type"`
	// offset 表示偏移量
	// @gotags: form:"offset"
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty" form:"offset"`
	// limit 表示每页数量
	// @gotags: form:"limit"
	Limit int64 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
}

func (x *ListMenusRequest) Reset() {
	*x = ListMenusRequest{}
	mi := &file_apiserver_v1_menu_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMenusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenusRequest) ProtoMessage() {}

func (x *ListMenusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_menu_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenusRequest.ProtoReflect.Descriptor instead.
func (*ListMenusRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_menu_proto_rawDescGZIP(), []int{3}
}

func (x *ListMenusRequest) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ListMenusRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ListMenusRequest) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *ListMenusRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListMenusRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ListMenusResponse 表示获取菜单列表响应
type ListMenusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// total_count 表示总数量
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// menus 表示菜单列表
	Menus []*Menu `protobuf:"bytes,2,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *ListMenusResponse) Reset() {
	*x = ListMenusResponse{}
	mi := &file_apiserver_v1_menu_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMenusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenusResponse) ProtoMessage() {}

func (x *ListMenusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_menu_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenusResponse.ProtoReflect.Descriptor instead.
func (*ListMenusResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_menu_proto_rawDescGZIP(), []int{4}
}

func (x *ListMenusResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListMenusResponse) GetMenus() []*Menu {
	if x != nil {
		return x.Menus
	}
	return nil
}

var File_apiserver_v1_menu_proto protoreflect.FileDescriptor

var file_apiserver_v1_menu_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf,
	0x04, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x32, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x05,
	0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x22, 0x97, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x54, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x05,
	0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x68, 0x77, 0x69,
	0x6e, 0x79, 0x75, 0x65, 0x2f, 0x6f, 0x6e, 0x65, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apiserver_v1_menu_proto_rawDescOnce sync.Once
	file_apiserver_v1_menu_proto_rawDescData = file_apiserver_v1_menu_proto_rawDesc
)

func file_apiserver_v1_menu_proto_rawDescGZIP() []byte {
	file_apiserver_v1_menu_proto_rawDescOnce.Do(func() {
		file_apiserver_v1_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiserver_v1_menu_proto_rawDescData)
	})
	return file_apiserver_v1_menu_proto_rawDescData
}

var file_apiserver_v1_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_apiserver_v1_menu_proto_goTypes = []any{
	(*Menu)(nil),                  // 0: v1.Menu
	(*GetUserMenusRequest)(nil),   // 1: v1.GetUserMenusRequest
	(*GetUserMenusResponse)(nil),  // 2: v1.GetUserMenusResponse
	(*ListMenusRequest)(nil),      // 3: v1.ListMenusRequest
	(*ListMenusResponse)(nil),     // 4: v1.ListMenusResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_apiserver_v1_menu_proto_depIdxs = []int32{
	0, // 0: v1.Menu.children:type_name -> v1.Menu
	5, // 1: v1.Menu.created_at:type_name -> google.protobuf.Timestamp
	5, // 2: v1.Menu.updated_at:type_name -> google.protobuf.Timestamp
	0, // 3: v1.GetUserMenusResponse.menus:type_name -> v1.Menu
	0, // 4: v1.ListMenusResponse.menus:type_name -> v1.Menu
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_apiserver_v1_menu_proto_init() }
func file_apiserver_v1_menu_proto_init() {
	if File_apiserver_v1_menu_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apiserver_v1_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apiserver_v1_menu_proto_goTypes,
		DependencyIndexes: file_apiserver_v1_menu_proto_depIdxs,
		MessageInfos:      file_apiserver_v1_menu_proto_msgTypes,
	}.Build()
	File_apiserver_v1_menu_proto = out.File
	file_apiserver_v1_menu_proto_rawDesc = nil
	file_apiserver_v1_menu_proto_goTypes = nil
	file_apiserver_v1_menu_proto_depIdxs = nil
}
