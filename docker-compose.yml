services:
  mysql:
    image: mysql:8.0
    container_name: miniblog-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: miniblog
      MYSQL_USER: miniblog
      MYSQL_PASSWORD: miniblog1234
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./configs/miniblog.sql:/docker-entrypoint-initdb.d/01-miniblog.sql
      - ./configs/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --init-connect=SET NAMES utf8mb4
      - --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
      - --max_connections=200
      - --innodb_buffer_pool_size=256M
      - --general-log=1
      - --general-log-file=/var/lib/mysql/mysql.log
    networks:
      - miniblog-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "miniblog", "-pminiblog1234"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:latest
    container_name: miniblog-redis
    restart: unless-stopped
    command: |
      redis-server 
      --appendonly yes 
      --appendfsync everysec
      --save 900 1
      --save 300 10
      --save 60 10000
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - miniblog-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: miniblog-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: miniblog
      PMA_PASSWORD: miniblog1234
      MYSQL_ROOT_PASSWORD: root123456
      PMA_PMADB: phpmyadmin
      PMA_CONTROLUSER: miniblog
      PMA_CONTROLPASS: miniblog1234
      MYSQL_CHARSET: utf8mb4
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - miniblog-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: miniblog-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - miniblog-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  miniblog-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 